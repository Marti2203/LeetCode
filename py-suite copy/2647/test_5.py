
import solution

import random
import typing
from typing import *
import collections
from collections import *
import functools
from functools import *
import math
from math import *
import string
from string import *
import bisect
import heapq
from heapq import *
import itertools
from itertools import *
import re
from re import *
import operator
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

    def __eq__(self, other):
        if other is None:
            return False
        return self.val == other.val and self.next == other.next

    def __repr__(self):
        return f"ListNode({self.val}, {self.next})"


def test_5():
    assert solution.Solution().colorRed(30) == [[1, 1], [2, 1], [2, 3], [3, 1], [4, 3], [4, 5], [4, 7], [5, 2], [6, 1], [6, 3], [6, 5], [6, 7], [6, 9], [6, 11], [7, 1], [8, 3], [8, 5], [8, 7], [8, 9], [8, 11], [8, 13], [8, 15], [9, 2], [10, 1], [10, 3], [10, 5], [10, 7], [10, 9], [10, 11], [10, 13], [10, 15], [10, 17], [10, 19], [11, 1], [12, 3], [12, 5], [12, 7], [12, 9], [12, 11], [12, 13], [12, 15], [12, 17], [12, 19], [12, 21], [12, 23], [13, 2], [14, 1], [14, 3], [14, 5], [14, 7], [14, 9], [14, 11], [14, 13], [14, 15], [14, 17], [14, 19], [14, 21], [14, 23], [14, 25], [14, 27], [15, 1], [16, 3], [16, 5], [16, 7], [16, 9], [16, 11], [16, 13], [16, 15], [16, 17], [16, 19], [16, 21], [16, 23], [16, 25], [16, 27], [16, 29], [16, 31], [17, 2], [18, 1], [18, 3], [18, 5], [18, 7], [18, 9], [18, 11], [18, 13], [18, 15], [18, 17], [18, 19], [18, 21], [18, 23], [18, 25], [18, 27], [18, 29], [18, 31], [18, 33], [18, 35], [19, 1], [20, 3], [20, 5], [20, 7], [20, 9], [20, 11], [20, 13], [20, 15], [20, 17], [20, 19], [20, 21], [20, 23], [20, 25], [20, 27], [20, 29], [20, 31], [20, 33], [20, 35], [20, 37], [20, 39], [21, 2], [22, 1], [22, 3], [22, 5], [22, 7], [22, 9], [22, 11], [22, 13], [22, 15], [22, 17], [22, 19], [22, 21], [22, 23], [22, 25], [22, 27], [22, 29], [22, 31], [22, 33], [22, 35], [22, 37], [22, 39], [22, 41], [22, 43], [23, 1], [24, 3], [24, 5], [24, 7], [24, 9], [24, 11], [24, 13], [24, 15], [24, 17], [24, 19], [24, 21], [24, 23], [24, 25], [24, 27], [24, 29], [24, 31], [24, 33], [24, 35], [24, 37], [24, 39], [24, 41], [24, 43], [24, 45], [24, 47], [25, 2], [26, 1], [26, 3], [26, 5], [26, 7], [26, 9], [26, 11], [26, 13], [26, 15], [26, 17], [26, 19], [26, 21], [26, 23], [26, 25], [26, 27], [26, 29], [26, 31], [26, 33], [26, 35], [26, 37], [26, 39], [26, 41], [26, 43], [26, 45], [26, 47], [26, 49], [26, 51], [27, 1], [28, 3], [28, 5], [28, 7], [28, 9], [28, 11], [28, 13], [28, 15], [28, 17], [28, 19], [28, 21], [28, 23], [28, 25], [28, 27], [28, 29], [28, 31], [28, 33], [28, 35], [28, 37], [28, 39], [28, 41], [28, 43], [28, 45], [28, 47], [28, 49], [28, 51], [28, 53], [28, 55], [29, 2], [30, 1], [30, 3], [30, 5], [30, 7], [30, 9], [30, 11], [30, 13], [30, 15], [30, 17], [30, 19], [30, 21], [30, 23], [30, 25], [30, 27], [30, 29], [30, 31], [30, 33], [30, 35], [30, 37], [30, 39], [30, 41], [30, 43], [30, 45], [30, 47], [30, 49], [30, 51], [30, 53], [30, 55], [30, 57], [30, 59]]
