
import solution

import random
import typing
from typing import *
import collections
from collections import *
import functools
from functools import *
import math
from math import *
import string
from string import *
import bisect
import heapq
from heapq import *
import itertools
from itertools import *
import re
from re import *
import operator
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

    def __eq__(self, other):
        if other is None:
            return False
        return self.val == other.val and self.next == other.next

    def __repr__(self):
        return f"ListNode({self.val}, {self.next})"


def test_18():
    assert solution.Solution().getRow(65) == [1, 65, 2080, 43680, 677040, 8259888, 82598880, 696190560, 5047381560, 31966749880, 179013799328, 895068996640, 4027810484880, 16421073515280, 60992558771040, 207374699821536, 648045936942300, 1867897112363100, 4981058966301600, 12321566916640800, 28339603908273840, 60727722660586800, 121455445321173600, 227068876035237600, 397370533061665800, 651687674221131912, 1002596421878664480, 1448194831602515360, 1965407271460556560, 2507588587725537680, 3009106305270645216, 3397378086595889760, 3609714217008132870, 3609714217008132870, 3397378086595889760, 3009106305270645216, 2507588587725537680, 1965407271460556560, 1448194831602515360, 1002596421878664480, 651687674221131912, 397370533061665800, 227068876035237600, 121455445321173600, 60727722660586800, 28339603908273840, 12321566916640800, 4981058966301600, 1867897112363100, 648045936942300, 207374699821536, 60992558771040, 16421073515280, 4027810484880, 895068996640, 179013799328, 31966749880, 5047381560, 696190560, 82598880, 8259888, 677040, 43680, 2080, 65, 1]
